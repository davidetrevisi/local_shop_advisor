swagger: "2.0"
info:
  version: "1.0"
  title: "Local Shop Advisor"
  description: Documentazione delle API del progetto del corso di Ingegneria del Software
host: localhost:8080
basePath: /api/v2
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  /products:
    get:
      summary: Lista di tutti i prodotti
      responses:
        200:
          description: Risposta elaborata correttamente
          schema:
            type: array
            items:
              $ref: "#/definitions/Product"
        404:
          description: Error not found
    post:
      consumes:
        - multipart/form-data
      summary: Creazione di un nuovo prodotto
      parameters:
        - in: header
          name: token
          required: true
          type: string
        - in: body
          name: product
          required: true
          description: I parametri del prodotto da creare + immagini da caricare
          schema:
            $ref: "#/definitions/Product"
      responses:
        201:
          description: OK
          schema:
            $ref: "#/definitions/Product"
          examples:
            multipart/form-data:
              name: Felpa
              description: Una bella felpa
              price: 10
              category: Abbigliamento
              tags:
                - Abbigliamento
                - Felpe
              images:
                - images//image.jpg
                - images//image2.jpg
              userId: 12345
              shopId: 12345
        404:
          description: Error not found
  /products/{productId}:
    get:
      summary: Get di un singolo prodotto
      parameters:
        - in: path
          name: productId
          required: true
          type: string
          description: L'id del prodotto da cercare
      responses:
        200:
          description: Risposta elaborata correttamente
          schema:
            $ref: "#/definitions/Product"
        404:
          description: Error not found
    delete:
      summary: Eliminazione di un singolo prodotto
      parameters:
        - in: header
          name: token
          required: true
          type: string
        - in: path
          name: productId
          required: true
          type: string
          description: L'id del prodotto da eliminare
      responses:
        204:
          description: Prodotto rimosso correttamente
        400:
          description: Cannot delete images
        404:
          description: Error not found
    put:
      summary: Modifica di un prodotto
      parameters:
        - in: header
          name: token
          required: true
          type: string
        - in: path
          name: productId
          required: true
          type: string
          description: L'id del prodotto da modificare
        - in: body
          name: product
          required: true
          description: I nuovi valori del prodotto da modificare
          schema:
            $ref: "#/definitions/Product"
      responses:
        200:
          description: Prodotto modificato correttamente
          schema:
            $ref: "#/definitions/Product"
        404:
          description: Error not found
  /products/catalog/{userId}:
    get:
      summary: Get dei prodotti di un determinato utente
      parameters:
        - in: header
          name: token
          required: true
          type: string
        - in: path
          name: userId
          required: true
          type: string
          description: L'Id dell'account da cercare
      responses:
        200:
          description: Risposta elaborata correttamente
          schema:
            type: array
            items:
              $ref: "#/definitions/Product"
        404:
          description: Error not found
  /products/find/{name}:
    get:
      summary: Ricerca di un prodotto per nome
      parameters:
        - in: path
          name: name
          required: true
          type: string
          description: Il nome del prodotto da cercare
      responses:
        200:
          description: Risposta elaborata correttamente
          schema:
            $ref: "#/definitions/Product"
        404:
          description: Error not found
  /shops:
    get:
      summary: Lista di tutti i Negozi
      parameters:
        - in: header
          name: token
          required: true
          type: string
      responses:
        200:
          description: Risposta elaborata correttamente
          schema:
            type: array
            items:
              $ref: "#/definitions/Shop"
        404:
          description: Error not found
    post:
      consumes:
        - multipart/form-data
      summary: Creazione di un nuovo negozio
      parameters:
        - in: header
          name: token
          required: true
          type: string
        - in: body
          name: shop
          required: true
          description: I parametri del negozio da creare + immagini da caricare
          schema:
            $ref: "#/definitions/Shop"
      responses:
        201:
          description: OK
          schema:
            $ref: "#/definitions/Shop"
          examples:
            multipart/form-data:
              name: Negozio di Felpe
              description: Bottega a gestione familiare di vendita abbigliamento
              position: Via Mario Rossi 22, Trento
              category: Abbigliamento
              tags:
                - Abbigliamento
                - Felpe
              images:
                - images//image.jpg
                - images//image2.jpg
              userId: 12345
        404:
          description: Error not found
  /shops/list/{userId}:
    get:
      summary: Get dei negozi di un determinato utente
      parameters:
        - in: header
          name: token
          required: true
          type: string
        - in: path
          name: userId
          required: true
          type: string
          description: L'id dell'account da cercare
      responses:
        200:
          description: Risposta elaborata correttamente
          schema:
            type: array
            items:
              $ref: "#/definitions/Shop"
        404:
          description: Error not found
  /shops/{shopId}:
    get:
      summary: Get di un singolo negozio
      parameters:
        - in: header
          name: token
          required: true
          type: string
        - in: path
          name: shopId
          required: true
          type: string
          description: L'id del negozio da cercare
      responses:
        200:
          description: Risposta elaborata correttamente
          schema:
            $ref: "#/definitions/Shop"
        404:
          description: Error not found
    delete:
      summary: Eliminazione di un singolo negozio
      parameters:
        - in: header
          name: token
          required: true
          type: string
        - in: path
          name: shopId
          required: true
          type: string
          description: L'id del negozio da eliminare
      responses:
        204:
          description: Negozio rimosso correttamente
        400:
          description: Cannot delete images
        404:
          description: Error not found
    put:
      summary: Modifica di un negozio
      parameters:
        - in: header
          name: token
          required: true
          type: string
        - in: path
          name: shopId
          required: true
          type: string
          description: L'id del negozio da modificare
        - in: body
          name: shop
          required: true
          description: I nuovi valori del negozio da modificare
          schema:
            $ref: "#/definitions/Shop"
      responses:
        200:
          description: Negozio modificato correttamente
          schema:
            $ref: "#/definitions/Shop"
        404:
          description: Error not found
  /carts:
    post:
      summary: Aggiunta di un prodotto al carrello
      parameters:
        - in: header
          name: token
          required: true
          type: string
        - in: body
          name: cart
          required: true
          schema:
            $ref: "#/definitions/Cart"
      responses:
        200:
          description: Add to Cart successfully!
          schema:
            $ref: "#/definitions/Cart"
          examples:
            application/json:
              userId: 3232445
              items:
                productId: 32423f3
                quantity: 5
                price: 16
                total: 80
              subTotal: 80
  /carts/{userId}:
    get:
      summary: Visualizzazione prodotti nel carrello
      parameters:
        - in: header
          name: token
          required: true
          type: string
        - in: path
          name: userId
          required: true
          type: string
      responses:
        200:
          description: Risposta elaborata correttamente
          schema:
            $ref: "#/definitions/Cart"
          examples:
            application/json:
              userId: 3232445
              items:
                productId: 32423f3
                quantity: 5
                price: 16
                total: 80
              subTotal: 80
  /authentications/login:
    post:
      summary: Login all'applicazione
      parameters:
        - in: body
          name: credentials
          required: true
          schema:
            $ref: "#/definitions/Account"
      responses:
        201:
          description: Login effettuato correttamente
          headers:
            token:
              type: string
              description: Token contenente le informazioni di login.
        404:
          description: Error not found
  /authentications/logout:
    get:
      summary: Logout dall'applicazione
      parameters:
        - in: header
          name: token
          required: true
          type: string
      responses:
        200:
          description: Logout effettuato correttamente
        404:
          description: Error not found
  /authentications/signup:
    post:
      summary: Creazione account cliente (venditore è lo stesso ma cambiano i parametri)
      parameters:
        - in: body
          name: user
          required: true
          description: Creazione account cliente (venditore è lo stesso ma cambiano i parametri)
          schema:
            $ref: "#/definitions/Cliente"
      responses:
        201:
          description: Utente aggiunto correttamente
          schema:
            $ref: "#/definitions/Cliente"
          examples:
            application/json:
              email: cliente@cliente.com
              password: 123
              name: Mario
              surname: Rossi
              phone: 30000
              birthdate: "2017-07-21T17:32:28Z"
              shipping_address: 12345678
              billing_address: 12345678
              payment: PayPal
        400:
          description: Errore nell'aggiunta utente
        404:
          description: Error not found
  /authentications/users:
    get:
      summary: Lista di tutti gli utenti
      parameters:
        - in: header
          name: token
          required: true
          type: string
      responses:
        200:
          description: Risposta elaborata correttamente
          schema:
            type: array
            items:
              $ref: "#/definitions/Account"
        404:
          description: Error not found
  /authentications/user/{userId}:
    get:
      summary: Get di un singolo utente (Cliente come esempio, ma è lo stesso per il Venditore)
      parameters:
        - in: header
          name: token
          required: true
          type: string
        - in: path
          name: userId
          required: true
          type: string
      responses:
        200:
          description: Risposta elaborata correttamente
          schema:
              $ref: "#/definitions/Cliente"
        404:
          description: Error not found
    delete:
      summary: Eliminazione di un account
      parameters:
        - in: header
          name: token
          required: true
          type: string
        - in: path
          name: userId
          required: true
          type: string
      responses:
        204:
          description: Account rimosso correttamente
        404:
          description: Error not found
definitions:
  Product:
    type: object
    properties:
      name:
        type: string
      description:
        type: string
      price:
        type: number
        minimum: 0
        maximum: 5000
      category:
        type: string
      tags:
        type: array
        items:
          type: string
      images:
        type: array
        items:
          type: string
      userId:
        type: string
      shopId:
        type: string
    required:
      - name
      - description
      - price
      - category
      - userId
      - shopId
    example:
      name: Felpa
      description: Una bella felpa
      price: 10
      category: Abbigliamento
      tags:
        - Abbigliamento
        - Felpe
      images:
        - images//image.jpg
        - images//image2.jpg
      userId: 12345
      shopId: 12345
  Shop:
    type: object
    properties:
      name:
        type: string
      description:
        type: string
      position:
        type: string
      category:
        type: string
      tags:
        type: array
        items:
          type: string
      images:
        type: array
        items:
          type: string
      userId:
        type: string
    required:
      - name
      - description
      - position
      - category
      - userId
    example:
      name: Negozio di Felpe
      description: Bottega a gestione familiare di vendita abbigliamento
      position: Via Mario Rossi 22, Trento
      category: Abbigliamento
      tags:
        - Abbigliamento
        - Felpe
      images:
        - images//image.jpg
        - images//image2.jpg
      userId: 12345
  Item:
    type: object
    properties:
      productId:
        type: string
      quantity:
        type: number
        minimum: 1
      price:
        type: number
      total:
        type: number
    example:
      productId: 32423f3
      quantity: 5
      price: 16
      total: 80
  Cart:
    type: object
    properties:
      userId:
        type: string
      items:
        type: array
        items:
          type: object
      subTotal:
        type: number
        default: 0
    example:
      userId: 32423f3
      items:
        - 231432fwd45
        - 12345
      quantity: 0
  Address:
    type: object
    properties:
      city:
        type: string
      CAP:
        type: number
        minimum: 0
      street:
        type: string
      number:
        type: number
        minimum: 0
    required:
      - city
      - CAP
      - street
      - number
    example:
      city: Trento
      CAP: 31000
      street: Via di Prova
      number: 10
  Account:
    type: object
    properties:
      email:
        type: string
      password:
        type: string
        format: password
    required:
      - email
      - password
  Admin:
    type: object
    properties:
      email:
        type: string
      password:
        type: string
        format: password
      name:
        type: string
      surname:
        type: string
    required:
      - email
      - password
      - name
      - surname
    example:
      email: admin@admin.com
      password: admin
      name: Mario
      surname: Rossi
  Cliente:
    type: object
    properties:
      email:
        type: string
      password:
        type: string
        format: password
      name:
        type: string
      surname:
        type: string
      phone:
        type: number
        minimum: 0
      birthdate:
        type: string
        format: date-time
        default: Date.now
      shipping_address:
        type: string
      billing_address:
        type: string
      payment:
        type: string
    required:
      - email
      - password
      - name
      - surname
      - birthdate
    example:
      email: cliente@cliente.com
      password: 123
      name: Mario
      surname: Rossi
      phone: 30000
      birthdate: "2017-07-21T17:32:28Z"
      shipping_address: 12345678
      billing_address: 12345678
      payment: PayPal
  Venditore:
    type: object
    properties:
      email:
        type: string
      password:
        type: string
        format: password
      name:
        type: string
      surname:
        type: string
      phone:
        type: number
        minimum: 0
      birthdate:
        type: string
        format: date-time
        default: Date.now
      personal_address:
        type: string
    required:
      - email
      - password
      - name
      - surname
      - phone
      - birthdate
      - personal_address
    example:
      email: cliente@cliente.com
      password: 123
      name: Mario
      surname: Rossi
      phone: 30000
      birthdate: "2017-07-21T17:32:28Z"
      shipping_address: 12345678